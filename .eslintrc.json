{
    "root": true,
    "extends": [
        "eslint:recommended",
        "plugin:jsonc/recommended-with-json",
        "plugin:eslint-comments/recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2022,
        "sourceType": "module",
        "ecmaFeatures": {
            "globalReturn": false,
            "impliedStrict": true
        },
        "project": [
            "./jsconfig.json",
            "./dev/jsconfig.json",
            "./test/jsconfig.json",
            "./benches/jsconfig.json"
        ]
    },
    "env": {
        "browser": true,
        "es2022": true,
        "webextensions": true
    },
    "plugins": [
        "no-unsanitized",
        "header",
        "jsdoc",
        "jsonc",
        "unused-imports",
        "@typescript-eslint",
        "@stylistic"
    ],
    "ignorePatterns": [
        "/ext/lib/",
        "/dev/lib/handlebars/"
    ],
    "rules": {
        "curly": ["error", "all"],
        "dot-notation": "error",
        "eqeqeq": "error",
        "func-names": ["error", "always"],
        "guard-for-in": "error",
        "no-case-declarations": "error",
        "no-const-assign": "error",
        "no-constant-condition": "off",
        "no-global-assign": "error",
        "no-implicit-globals": "error",
        "no-new": "error",
        "no-param-reassign": "off",
        "no-prototype-builtins": "error",
        "no-restricted-syntax": [
            "error",
            {
                "message": "Avoid using JSON.parse(), prefer parseJson.",
                "selector": "MemberExpression[object.name=JSON][property.name=parse]"
            },
            {
                "message": "Avoid using Response.json(), prefer readResponseJson.",
                "selector": "MemberExpression[property.name=json]"
            }
        ],
        "no-shadow": ["off", {"builtinGlobals": false}],
        "no-undef": "error",
        "no-undefined": "error",
        "no-underscore-dangle": ["error", {"allowAfterThis": true, "allowAfterSuper": false, "allowAfterThisConstructor": false}],
        "no-unexpected-multiline": "error",
        "no-unneeded-ternary": "error",
        "no-unused-vars": ["error", {"vars": "local", "args": "after-used", "argsIgnorePattern": "^_", "caughtErrors": "none"}],
        "no-unused-expressions": "error",
        "no-var": "error",
        "prefer-const": ["error", {"destructuring": "all"}],
        "require-atomic-updates": "off",

        "@stylistic/array-bracket-newline": ["error", "consistent"],
        "@stylistic/array-bracket-spacing": ["error", "never"],
        "@stylistic/array-element-newline": ["error", "consistent"],
        "@stylistic/arrow-parens": ["error", "always"],
        "@stylistic/arrow-spacing": ["error", {"before": true, "after": true}],
        "@stylistic/block-spacing": ["error", "always"],
        "@stylistic/brace-style": ["error", "1tbs", {"allowSingleLine": true}],
        "@stylistic/comma-dangle": ["error", "never"],
        "@stylistic/comma-spacing": ["error", {"before": false, "after": true}],
        "@stylistic/comma-style": ["error", "last"],
        "@stylistic/computed-property-spacing": ["error", "never"],
        "@stylistic/dot-location": ["error", "property"],
        "@stylistic/eol-last": ["error", "always"],
        "@stylistic/func-call-spacing": ["error", "never"],
        "@stylistic/function-call-argument-newline": ["error", "consistent"],
        "@stylistic/function-call-spacing": ["error", "never"],
        "@stylistic/function-paren-newline": ["error", "multiline-arguments"],
        "@stylistic/generator-star-spacing": ["error", "before"],
        "@stylistic/implicit-arrow-linebreak": ["error", "beside"],
        "@stylistic/indent": ["error", 4, {"SwitchCase": 1, "MemberExpression": 1, "flatTernaryExpressions": true, "ignoredNodes": ["ConditionalExpression"]}],
        "@stylistic/indent-binary-ops": ["error", 0],
        "@stylistic/key-spacing": ["error", {"beforeColon": false, "afterColon": true, "mode": "strict"}],
        "@stylistic/keyword-spacing": ["error", {"before": true, "after": true}],
        "@stylistic/linebreak-style": ["error", "unix"],
        "@stylistic/lines-around-comment": "off",
        "@stylistic/lines-between-class-members": ["error", "always", {"exceptAfterSingleLine": true}],
        "@stylistic/max-len": "off",
        "@stylistic/max-statements-per-line": ["error", {"max": 2}],
        "@stylistic/member-delimiter-style": [
            "error",
            {
                "multiline": {"delimiter": "semi", "requireLast": true},
                "singleline": {"delimiter": "comma", "requireLast": false},
                "multilineDetection": "brackets"
            }
        ],
        "@stylistic/multiline-ternary": ["error", "always-multiline"],
        "@stylistic/new-parens": "error",
        "@stylistic/newline-per-chained-call": ["error", {"ignoreChainWithDepth": 3}],
        "@stylistic/no-confusing-arrow": "error",
        "@stylistic/no-extra-parens": "off",
        "@stylistic/no-extra-semi": "error",
        "@stylistic/no-floating-decimal": "error",
        "@stylistic/no-mixed-operators": ["error", {"allowSamePrecedence": true, "groups": [["&&", "||"]]}],
        "@stylistic/no-mixed-spaces-and-tabs": "error",
        "@stylistic/no-multi-spaces": "error",
        "@stylistic/no-multiple-empty-lines": ["error", {"max": 2, "maxEOF": 0, "maxBOF": 0}],
        "@stylistic/no-tabs": "error",
        "@stylistic/no-trailing-spaces": "error",
        "@stylistic/no-whitespace-before-property": "error",
        "@stylistic/nonblock-statement-body-position": ["error", "beside"],
        "@stylistic/object-curly-newline": "error",
        "@stylistic/object-curly-spacing": ["error", "never"],
        "@stylistic/padded-blocks": ["error", "never"],
        "@stylistic/padding-line-between-statements": [
            "error",
            {"blankLine": "always", "prev": "*", "next": "import"},
            {"blankLine": "always", "prev": "import", "next": "*"},
            {"blankLine": "always", "prev": "*", "next": "export"},
            {"blankLine": "always", "prev": "import", "next": "let"},
            {"blankLine": "always", "prev": "import", "next": "const"},
            {"blankLine": "never", "prev": "import", "next": "import"},
            {"blankLine": "always", "prev": "export", "next": "let"},
            {"blankLine": "always", "prev": "export", "next": "const"}
        ],
        "@stylistic/quote-props": ["error", "consistent"],
        "@stylistic/quotes": ["error", "single", "avoid-escape"],
        "@stylistic/rest-spread-spacing": ["error", "never"],
        "@stylistic/semi": "error",
        "@stylistic/semi-spacing": ["error", {"before": false, "after": true}],
        "@stylistic/space-before-blocks": ["error", "always"],
        "@stylistic/space-before-function-paren": ["error", {"anonymous": "never", "named": "never", "asyncArrow": "always"}],
        "@stylistic/space-in-parens": ["error", "never"],
        "@stylistic/space-infix-ops": ["error", {"int32Hint": false}],
        "@stylistic/space-unary-ops": "error",
        "@stylistic/spaced-comment": ["error", "always"],
        "@stylistic/switch-colon-spacing": ["error", {"after": true, "before": false}],
        "@stylistic/template-curly-spacing": ["error", "never"],
        "@stylistic/template-tag-spacing": ["error", "never"],
        "@stylistic/wrap-iife": ["error", "inside"],

        "no-unsanitized/method": "error",
        "no-unsanitized/property": "error",

        "jsdoc/check-access": "error",
        "jsdoc/check-alignment": "error",
        "jsdoc/check-line-alignment": ["error", "never", {"wrapIndent": "  "}],
        "jsdoc/check-param-names": "error",
        "jsdoc/check-property-names": "error",
        "jsdoc/check-tag-names": "error",
        "jsdoc/empty-tags": "error",
        "jsdoc/check-types": "error",
        "jsdoc/check-values": "error",
        "jsdoc/implements-on-classes": "error",
        "jsdoc/multiline-blocks": "error",
        "jsdoc/no-bad-blocks": "error",
        "jsdoc/no-multi-asterisks": "error",
        "jsdoc/no-undefined-types": "error",
        "jsdoc/require-asterisk-prefix": "error",
        "jsdoc/require-description": "off",
        "jsdoc/require-hyphen-before-param-description": ["error", "never"],
        "jsdoc/require-jsdoc": [
            "error",
            {
                "require": {
                    "ClassDeclaration": false,
                    "FunctionDeclaration": true,
                    "MethodDefinition": false
                },
                "contexts": [
                    "MethodDefinition[kind=constructor]>FunctionExpression>BlockStatement>ExpressionStatement>AssignmentExpression[left.object.type=ThisExpression]",
                    "ClassDeclaration>Classbody>PropertyDefinition",
                    "MethodDefinition[kind!=constructor][kind!=set]",
                    "MethodDefinition[kind=constructor][value.params.length>0]"
                ],
                "checkGetters": "no-setter",
                "checkSetters": "no-getter"
            }
        ],
        "jsdoc/require-param": "error",
        "jsdoc/require-param-description": "off",
        "jsdoc/require-param-name": "error",
        "jsdoc/require-param-type": "error",
        "jsdoc/require-property": "error",
        "jsdoc/require-property-description": "off",
        "jsdoc/require-property-name": "error",
        "jsdoc/require-property-type": "error",
        "jsdoc/require-returns": "error",
        "jsdoc/require-returns-check": "error",
        "jsdoc/require-returns-description": "off",
        "jsdoc/require-returns-type": "error",
        "jsdoc/require-throws": "error",
        "jsdoc/require-yields": "error",
        "jsdoc/require-yields-check": "error",
        "jsdoc/tag-lines": ["error", "never", {"startLines": 0}],
        "jsdoc/valid-types": "error",

        "jsonc/indent": ["error", 4],
        "jsonc/array-bracket-newline": ["error", "consistent"],
        "jsonc/array-bracket-spacing": ["error", "never"],
        "jsonc/array-element-newline": ["error", "consistent"],
        "jsonc/comma-style": ["error", "last"],
        "jsonc/key-spacing": ["error", {"beforeColon": false, "afterColon": true, "mode": "strict"}],
        "jsonc/no-octal-escape": "error",
        "jsonc/object-curly-newline": ["error", {"consistent": true}],
        "jsonc/object-curly-spacing": ["error", "never"],
        "jsonc/object-property-newline": ["error", {"allowAllPropertiesOnSameLine": true}],

        "eslint-comments/no-unused-disable": "error",

        "unused-imports/no-unused-imports": "error",

        "@typescript-eslint/ban-ts-comment": ["error", {"ts-expect-error": {"descriptionFormat": "^ - .+$"}}],
        "@typescript-eslint/ban-types": ["error", {"types": {"object": true}, "extendDefaults": true}],
        "@typescript-eslint/consistent-type-exports": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-shadow": ["error", {"builtinGlobals": false}],
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-var-requires": "off"
    },
    "overrides": [
        {
            "files": [
                "*.ts"
            ],
            "rules": {
                "no-undef": "off",

                "@typescript-eslint/no-unused-vars": ["error", {"vars": "local", "args": "after-used", "argsIgnorePattern": "^_", "caughtErrors": "none"}],

                "@stylistic/block-spacing": "off",
                "@stylistic/brace-style": ["error", "1tbs", {"allowSingleLine": true}],
                "@stylistic/comma-dangle": [
                    "error",
                    {
                        "arrays": "always-multiline",
                        "objects": "always-multiline",
                        "imports": "always-multiline",
                        "exports": "always-multiline",
                        "functions": "always-multiline",
                        "enums": "always-multiline",
                        "generics": "always-multiline",
                        "tuples": "always-multiline"
                    }
                ],
                "@stylistic/comma-spacing": ["error", {"before": false, "after": true}],
                "@stylistic/function-call-spacing": ["error", "never"],
                "@stylistic/indent": ["error", 4],
                "@stylistic/indent-binary-ops": "off",
                "@stylistic/key-spacing": ["error", {"beforeColon": false, "afterColon": true, "mode": "strict"}],
                "@stylistic/keyword-spacing": ["error", {"before": true, "after": true}],
                "@stylistic/lines-around-comment": "off",
                "@stylistic/lines-between-class-members": ["error", "always"],
                "@stylistic/member-delimiter-style": [
                    "error",
                    {
                        "multiline": {"delimiter": "semi", "requireLast": true},
                        "singleline": {"delimiter": "comma", "requireLast": false},
                        "multilineDetection": "brackets"
                    }
                ],
                "@stylistic/no-multiple-empty-lines": ["error", {"max": 1, "maxEOF": 0}],
                "@stylistic/no-extra-parens": ["error", "all"],
                "@stylistic/no-extra-semi": "error",
                "@stylistic/object-curly-spacing": ["error", "never"],
                "@stylistic/padding-line-between-statements": "off",
                "@stylistic/quotes": ["error", "single", "avoid-escape"],
                "@stylistic/semi": "error",
                "@stylistic/space-before-blocks": ["error", "always"],
                "@stylistic/space-before-function-paren": ["error", {"anonymous": "never", "named": "never", "asyncArrow": "always"}],
                "@stylistic/space-infix-ops": "error",
                "@stylistic/type-annotation-spacing": "error"
            }
        },
        {
            "files": [
                "*.json"
            ],
            "parser": "jsonc-eslint-parser"
        },
        {
            "files": [
                "ext/data/schemas/options-schema.json"
            ],
            "rules": {
                "@stylistic/no-multi-spaces": "off"
            }
        },
        {
            "files": [
                "test/data/anki-note-builder-test-results.json",
                "test/data/database-test-cases.json",
                "test/data/translator-test-results-note-data1.json",
                "test/data/translator-test-results.json"
            ],
            "rules": {
                "jsonc/indent": ["error", 2]
            }
        },
        {
            "files": [
                "test/data/dictionaries/valid-dictionary1/term_bank_1.json",
                "test/data/dictionaries/valid-dictionary1/term_bank_2.json"
            ],
            "rules": {
                "jsonc/array-element-newline": "off",
                "jsonc/object-property-newline": "off"
            }
        },
        {
            "files": [
                "*.js",
                "*.ts"
            ],
            "rules": {
                "header/header": [
                    "error",
                    "block",
                    {
                        "pattern": " \\* Copyright \\(C\\) (2023-)?2024  Yomitan Authors(\n \\* Copyright \\(C\\) (20(16|17|18|19|20|21)-)?2022  Yomichan Authors)?\n \\*\n \\* This program is free software: you can redistribute it and/or modify\n \\* it under the terms of the GNU General Public License as published by\n \\* the Free Software Foundation, either version 3 of the License, or\n \\* \\(at your option\\) any later version\\.\n \\*\n \\* This program is distributed in the hope that it will be useful,\n \\* but WITHOUT ANY WARRANTY; without even the implied warranty of\n \\* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\\.  See the\n \\* GNU General Public License for more details\\.\n \\*\n \\* You should have received a copy of the GNU General Public License\n \\* along with this program\\.  If not, see <https://www\\.gnu\\.org/licenses/>\\.\n "
                    }
                ]
            }
        },
        {
            "files": [
                "ext/**/*.js"
            ],
            "rules": {
                "no-console": "error"
            }
        },
        {
            "files": [
                "test/**/*.js",
                "dev/**/*.js",
                "integration.spec.js",
                "playwright.config.js",
                "playwright-util.js",
                "visual.spec.js"
            ],
            "env": {
                "browser": false,
                "node": true,
                "webextensions": false
            }
        },
        {
            "files": [
                "test/data/html/**/*.js"
            ],
            "parserOptions": {
                "sourceType": "script"
            },
            "env": {
                "browser": true,
                "node": false,
                "webextensions": false
            }
        },
        {
            "files": [
                "test/data/html/**/*.js"
            ],
            "excludedFiles": [
                "test/data/html/js/html-test-utilities.js"
            ],
            "globals": {
                "HtmlTestUtilities": "readonly"
            }
        },
        {
            "files": [
                "test/**/*.test.js"
            ],
            "plugins": [
                "vitest"
            ],
            "extends": [
                "plugin:vitest/recommended"
            ],
            "rules": {
                "vitest/prefer-to-be": "off"
            }
        },
        {
            "files": [
                "dev/lib/**/*.js"
            ],
            "extends": [
                "plugin:@typescript-eslint/disable-type-checked"
            ]
        },
        {
            "files": [
                "ext/js/core/api-map.js",
                "ext/js/core/extension-error.js",
                "ext/js/core/json.js",
                "ext/js/data/sandbox/anki-note-data-creator.js",
                "ext/js/dictionary/dictionary-data-util.js",
                "ext/js/display/sandbox/pronunciation-generator.js",
                "ext/js/display/sandbox/structured-content-generator.js",
                "ext/js/dom/sandbox/css-style-applier.js",
                "ext/js/language/ja/japanese.js",
                "ext/js/templates/sandbox/anki-template-renderer-content-manager.js",
                "ext/js/templates/sandbox/anki-template-renderer.js",
                "ext/js/templates/sandbox/template-renderer-frame-api.js",
                "ext/js/templates/sandbox/template-renderer-frame-main.js",
                "ext/js/templates/sandbox/template-renderer-media-provider.js",
                "ext/js/templates/sandbox/template-renderer.js"
            ],
            "env": {
                "webextensions": false
            }
        },
        {
            "files": [
                "ext/js/core/event-dispatcher.js",
                "ext/js/core/extension-error.js",
                "ext/js/core/json.js",
                "ext/js/core/logger.js",
                "ext/js/core/to-error.js",
                "ext/js/core/utilities.js",
                "ext/js/data/database.js",
                "ext/js/dictionary/dictionary-database.js",
                "ext/js/dictionary/dictionary-importer.js",
                "ext/js/dictionary/dictionary-worker-handler.js",
                "ext/js/dictionary/dictionary-worker-main.js",
                "ext/js/dictionary/dictionary-worker-media-loader.js",
                "ext/js/media/media-util.js"
            ],
            "env": {
                "browser": false,
                "worker": true
            }
        },
        {
            "files": [
                "ext/js/accessibility/accessibility-controller.js",
                "ext/js/background/backend.js",
                "ext/js/background/background-main.js",
                "ext/js/background/offscreen-proxy.js",
                "ext/js/background/profile-conditions-util.js",
                "ext/js/background/request-builder.js",
                "ext/js/background/script-manager.js",
                "ext/js/comm/anki-connect.js",
                "ext/js/comm/clipboard-monitor.js",
                "ext/js/comm/clipboard-reader.js",
                "ext/js/comm/mecab.js",
                "ext/js/core/api-map.js",
                "ext/js/core/event-dispatcher.js",
                "ext/js/core/event-listener-collection.js",
                "ext/js/core/extension-error.js",
                "ext/js/core/fetch-utilities.js",
                "ext/js/core/json.js",
                "ext/js/core/logger.js",
                "ext/js/core/to-error.js",
                "ext/js/core/utilities.js",
                "ext/js/data/anki-util.js",
                "ext/js/data/database.js",
                "ext/js/data/json-schema.js",
                "ext/js/data/options-util.js",
                "ext/js/data/permissions-util.js",
                "ext/js/data/sandbox/array-buffer-util.js",
                "ext/js/dictionary/dictionary-database.js",
                "ext/js/dom/native-simple-dom-parser.js",
                "ext/js/dom/simple-dom-parser.js",
                "ext/js/extension/environment.js",
                "ext/js/extension/web-extension.js",
                "ext/js/general/cache-map.js",
                "ext/js/general/object-property-accessor.js",
                "ext/js/general/regex-util.js",
                "ext/js/general/text-source-map.js",
                "ext/js/language/ja/japanese-wanakana.js",
                "ext/js/language/ja/japanese.js",
                "ext/js/language/language-transformer.js",
                "ext/js/language/translator.js",
                "ext/js/media/audio-downloader.js",
                "ext/js/media/media-util.js",
                "ext/js/templates/template-patcher.js"
            ],
            "env": {
                "browser": false,
                "serviceworker": true
            },
            "globals": {
                "FileReader": "readonly",
                "Intl": "readonly",
                "crypto": "readonly",
                "AbortController": "readonly"
            }
        }
    ]
}
